{"version":3,"sources":["Auth/Auth.js","NewsCard/NewsCard.js","Graph/Graph.js","App/App.js","Login/LoginForm.js","Login/LoginPage.js","SignUp/SignUpForm.js","SignUp/SignUpPage.js","Base/Base.js","serviceWorker.js","index.js"],"names":["Auth","token","email","localStorage","setItem","getItem","removeItem","NewsCard","url","event","preventDefault","window","open","_this","this","react_default","a","createElement","Card","className","CardActionArea","CardMedia","component","height","image","props","news","urlToImage","CardContent","Typography","gutterBottom","variant","title","source","Chip","label","color","reason","time","description","CardActions","Button","size","onClick","redirectToUrl","FacebookShareButton","quote","FacebookIcon","round","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","React","Component","Graph","node","handleNodeClick","distRatio","Math","hypot","x","y","z","fg","cameraPosition","react_force_graph_module","ref","el","width","innerWidth","backgroundColor","linkColor","link","graphData","linkWidth","onNodeClick","nodeThreeObject","_ref","imgTexture","THREE","load","material","map","sprite","scale","set","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","data","focused_news","loaded","loadNews","_this2","news_url","location","hostname","request","Request","method","headers","Authorization","getToken","fetch","then","res","json","parsed","setState","nodes","id","digest","links","graph","from","target","to","_this3","generateGraphData","Grid","container","item","md","src_Graph_Graph","src_NewsCard_NewsCard","LoginForm","onSubmit","onChange","error","Paper","FormControl","margin","required","fullWidth","InputLabel","htmlFor","Input","name","autoComplete","autoFocus","type","LoginPage","user","password","console","log","Accept","Content-Type","body","JSON","stringify","response","status","authenticateUser","replace","field","value","src_Login_LoginForm","e","processForm","changeUser","SignUpForm","SignUpPage","confirm_password","src_SignUp_SignUpForm","Base","withRouter","history","AppBar","position","Toolbar","IconButton","aria-label","Menu_default","isUserAuthenticated","getEmail","href","deauthenticateUser","push","logout","Link","react_router","exact","path","render","src_App_App","Login_LoginPage","Boolean","match","ReactDOM","react_router_dom","src_Base_Base","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e3bc112.chunk.js","sourcesContent":["class Auth {\n\tstatic authenticateUser(token, email) {\n\t\tlocalStorage.setItem('token', token);\n\t\tlocalStorage.setItem('email', email);\n\t}\n\n\tstatic isUserAuthenticated() {\n\t\treturn localStorage.getItem('token') !== null;\n\t}\n\n\tstatic deauthenticateUser() {\n\t\tlocalStorage.removeItem('token');\n\t\tlocalStorage.removeItem('email');\n\t}\n\n\tstatic getToken() {\n\t\treturn localStorage.getItem('token');\n\t}\n\n\tstatic getEmail() {\n\t\treturn localStorage.getItem('email');\n\t}\n}\n\nexport default Auth;\n","import './NewsCard.css';\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\n\nimport { FacebookShareButton, TwitterShareButton, LinkedinShareButton, FacebookIcon, TwitterIcon, LinkedinIcon } from 'react-share';\n\nclass NewsCard extends React.Component {\n  redirectToUrl(url, event) {\n    // by default, will redirect current page to the hyperlink\n    event.preventDefault();\n    // open a new tab\n    window.open(url, '_blank');\n  }\n\n  render() {\n    return (\n      <Card className=\"card\">\n       <CardActionArea>\n         <CardMedia\n           component=\"img\"\n           height=\"320\"\n           image={this.props.news.urlToImage}\n         />\n         <CardContent>\n           <Typography gutterBottom variant=\"h4\" component=\"h2\">\n             {this.props.news.title}\n           </Typography>\n           {this.props.news.source != null && <Chip label={this.props.news.source} color=\"primary\" />}\n           &nbsp; &nbsp;\n           {this.props.news.reason != null && <Chip label={this.props.news.reason} color=\"secondary\" />}\n           &nbsp; &nbsp;\n           {this.props.news.time != null && <Chip label={this.props.news.time} variant=\"outlined\" color=\"primary\" />}\n           <br/>\n           <br/>\n           <Typography component=\"p\">\n             {this.props.news.description}\n           </Typography>\n         </CardContent>\n       </CardActionArea>\n       <CardActions>\n         <Button size=\"small\" color=\"primary\" onClick={(event)=>this.redirectToUrl(this.props.news.url, event)}>\n           Learn More\n         </Button>\n         <FacebookShareButton\n            url = {this.props.news.url}\n            quote = {this.props.news.title}>\n            <FacebookIcon size = {24} round/>\n         </FacebookShareButton>\n         <TwitterShareButton\n            url = {this.props.news.url}\n            quote = {this.props.news.title}>\n            <TwitterIcon size = {24} round/>\n         </TwitterShareButton>\n         <LinkedinShareButton\n            url = {this.props.news.url}\n            quote = {this.props.news.title}>\n            <LinkedinIcon size = {24} round/>\n         </LinkedinShareButton>\n       </CardActions>\n     </Card>\n    );\n  }\n}\n\nexport default NewsCard;","import React from 'react';\nimport { ForceGraph3D } from 'react-force-graph';\nimport * as THREE from 'three';\n\nclass Graph extends React.Component {\n    onClick(node) {\n        this.props.handleNodeClick(node);\n        \n        // onclicknode, change perspective\n        const distance = 60;\n        const distRatio = 1 + distance/Math.hypot(node.x, node.y, node.z);\n        this.fg.cameraPosition({ x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\n\t\t\tnode, // lookAt ({ x, y, z })\n\t\t\t3000 // ms transition duration\n\t\t);\n    }\n    \n    render () {\n        return (\n            <div> \n                <ForceGraph3D\n                    ref = { el => { this.fg = el; }} \n                    width = { window.innerWidth * 0.6 }\n                    backgroundColor = 'white'\n                    linkColor = { link => '#0a6aee' }\n                    graphData = { this.props.graphData }\n                    linkWidth = { link => 0.5 } \n                    onNodeClick = { node => this.onClick(node) }\n                    nodeThreeObject = {({ news }) => {\n                        const imgTexture = new THREE.TextureLoader().load(news.urlToImage);\n                        const material = new THREE.SpriteMaterial({ map: imgTexture });\n                        const sprite = new THREE.Sprite(material);\n                        sprite.scale.set(21, 14, 1);\n                        return sprite;\n                    }}\n                />\n            </div>\n        )\n        \n    }\n}\n\nexport default Graph;","import './App.css';\n\nimport Auth from '../Auth/Auth';\nimport NewsCard from '../NewsCard/NewsCard';\nimport Graph from '../Graph/Graph';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = { data: {}, focused_news: {}, loaded: false };\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.loadNews();\n\t}\n\n\tloadNews() {\n\t\tconst news_url = 'http://' + window.location.hostname + '/news';\n\t\tconst request = new Request(news_url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'bearer ' + Auth.getToken(),\n\t\t\t},\n\t\t});\n\n\t\tfetch(request)\n\t\t\t.then(res => res.json())\n\t\t\t.then(parsed => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: parsed,\n\t\t\t\t\tfocused_news: parsed.focused_news,\n\t\t\t\t\tloaded: true\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tgenerateGraphData(graphData) {\n\t\tconst nodes = graphData.news.map(news => ({ id: news.digest, news: news }));\n\t\tconst links = graphData.graph.links.map(link => ({ source: link.from, target: link.to }));\n\n\t\tconst gData = {\n\t\t\tnodes: nodes,\n\t\t\tlinks: links\n\t\t};\n\n\t\treturn gData;\n\t}\n\n\thandleNodeClick(node) {\n\t\tthis.setState({\n\t\t\tfocused_news: node.news\n\t\t});\n\t}\n\n\trender() {\n\t\tif (!this.state.loaded) {\n\t\t\treturn (<div><p>Loading...</p></div>);\n\t\t}\n\n\t\tconst graphData = this.generateGraphData(this.state.data);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item md={8}>\n\t\t\t\t\t\t<Graph graphData={graphData} handleNodeClick={(node)=>this.handleNodeClick(node)} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item md={4}>\n\t\t\t\t\t  <NewsCard news={this.state.focused_news} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import './LoginForm.css';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\n\n// to reinforce proptype\n// must be able to handle onSubmit and \n// here define LoginForm as a function instead of class to simplify\nconst LoginForm = ({\n\tonSubmit,\n\tonChange,\n\terror,\n}) => (\n\t<div className=\"login-panel\">\n\t\t <Paper className=\"paper\">\n\t\t\t <Typography component=\"h1\" variant=\"h4\">\n\t\t\t\t Sign in\n\t\t\t </Typography>\n\t\t\t <form onSubmit={onSubmit}>\n\t\t\t   {error && <p className=\"error-message\">{error}</p>}\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n\t\t\t\t\t <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"password\">Password</InputLabel>\n\t\t\t\t\t <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <br/>\n\t\t\t\t <br/>\n\t\t\t\t <Button\n\t\t\t\t\t type=\"submit\"\n\t\t\t\t\t fullWidth\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"primary\">\n\t\t\t\t\t Sign in\n\t\t\t\t </Button>\n\t\t\t </form>\n\t\t </Paper>\n\t </div>\n);\n\nLoginForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terror: PropTypes.string.isRequired,\n}\n\nexport default LoginForm;\n\n\n","import Auth from '../Auth/Auth';\nimport LoginForm from './LoginForm';\nimport React from 'react';\n\nclass LoginPage extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\terror: '',\n\t\t\tuser: {\n\t\t\t\temail: '',\n\t\t\t\tpassword: ''\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessForm(event) {\n\t\tevent.preventDefault();\n\n\t\tconst email = this.state.user.email;\n\t\tconst password = this.state.user.password;\n\n\t\tconsole.log('response');\n\t\tconsole.log('email:', email);\n\t\tconsole.log('password:', password);\n\t\t\n\t\n\n\t\t// Post login data\n\t\tconst url = 'http://' + window.location.hostname + '/auth/login';\n\t\tconst request = new Request(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.user.email,\n\t\t\t\tpassword: this.state.user.password\n\t\t\t})\n\t\t});\n\n\t\tfetch(request).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: ''\n\t\t\t\t});\n\n\t\t\t\tresponse.json().then(json => {\n\t\t\t\t\t\n\t\t\t\t    Auth.authenticateUser(json.token, email);\n\t\t\t\t    \n\t\t\t\t\twindow.location.replace('/');\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('Login failed');\n\t\t\t\tresponse.json().then(json => {\n\t\t\t\t\tconst error = json.error ? json.error : '';\n\t\t\t\t\tthis.setState({ error });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t}\n\n\tchangeUser(event) {\n\t\tconst field = event.target.name;\n\t\tconst user = this.state.user;\n\t\tuser[field] = event.target.value;\n\n\t\tthis.setState({ user });\n\t}\n\n\trender() {\n\t\treturn (<LoginForm onSubmit = {(e) => this.processForm(e)}\n\t\t\t\t\t\t\t\t onChange = {(e) => this.changeUser(e)}\n\t\t\t\t\t\t\t\t error = {this.state.error}/>\n\t\t);\n\t}\n}\n\nexport default LoginPage;","import './SignUpForm.css';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst SignUpForm = ({\n\tonSubmit,\n\tonChange,\n\terror,\n}) => (\n\t<div className=\"signup-panel\">\n\t\t <Paper className=\"paper\">\n\t\t\t <Typography component=\"h1\" variant=\"h4\">\n\t\t\t\t Sign Up\n\t\t\t </Typography>\n\t\t\t <form onSubmit={onSubmit}>\n\t\t\t   {error && <p className=\"error-message\">{error}</p>}\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n\t\t\t\t\t <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"password\">Password</InputLabel>\n\t\t\t\t\t <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <FormControl margin=\"normal\" required fullWidth>\n\t\t\t\t\t <InputLabel htmlFor=\"password\">Confirm Password</InputLabel>\n\t\t\t\t\t <Input name=\"confirm_password\" type=\"password\" id=\"confirm_password\" autoComplete=\"current-password\" onChange={onChange} />\n\t\t\t\t </FormControl>\n\t\t\t\t <br/>\n\t\t\t\t <br/>\n\t\t\t\t <Button\n\t\t\t\t\t type=\"submit\"\n\t\t\t\t\t fullWidth\n\t\t\t\t\t variant=\"contained\"\n\t\t\t\t\t color=\"primary\">\n\t\t\t\t\t Sign Up\n\t\t\t\t </Button>\n\t\t\t </form>\n\t\t </Paper>\n\t </div>\n);\n\nSignUpForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terror: PropTypes.string.isRequired,\n}\n\nexport default SignUpForm;","import Auth from '../Auth/Auth';\nimport SignUpForm from './SignUpForm';\nimport React from 'react';\n\nclass SignUpPage extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\terror: '',\n\t\t\tuser: {\n\t\t\t\temail: '',\n\t\t\t\tpassword: '',\n\t\t\t\tconfirm_password: '',\n\t\t\t}\n\t\t}\n\t}\n\n\tprocessForm(event) {\n\t\tevent.preventDefault();\n\n\t\tconst email = this.state.user.email;\n\t\tconst password = this.state.user.password;\n\t\tconst confirm_password = this.state.user.confirm_password;\n\n\t\tconsole.log('email:', email);\n\t\tconsole.log('password', password);\n\t\tconsole.log('confirm_password', confirm_password);\n\n\t\t// Post registeration data\n\t\tconst url = 'http://' + window.location.hostname + '/auth/signup';\n\t\tconst request = new Request(\n\t\t\turl, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Accept': 'application/json',\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\temail: this.state.user.email,\n\t\t\t\t\tpassword: this.state.user.password\n\t\t\t\t})\n\t\t\t});\n\n\t\tfetch(request).then(response => {\n\t\t\tif (response.status === 200) {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: ''\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// change the current URL to /\n\t\t\t\twindow.location.replace('/');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresponse.json().then(json => {\n\t\t\t\t\tconsole.log(json);\n\t\t\t\t\tconst error = json.error ? json.error : '';\n\t\t\t\t\tthis.setState({ error });\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tchangeUser(event) {\n\t\tconst field = event.target.name;\n\t\tconst user = this.state.user;\n\t\tuser[field] = event.target.value;\n\n\t\tthis.setState({ user });\n\n\t\tlet error = this.state.error;\n\n\t\tif (this.state.user.password !== this.state.user.confirm_password) {\n\t\t\terror = \"Password and confirm password don't match.\";\n\t\t}\n\t\telse {\n\t\t\terror = \"\";\n\t\t}\n\n\t\tthis.setState({ error });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<SignUpForm onSubmit = {(e) => this.processForm(e)}\n\t\t\t\t\t\t\t\t  onChange = {(e) => this.changeUser(e)}\n\t\t\t\t\t\t\t\t  error = {this.state.error}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default SignUpPage;","import React from 'react';\nimport App from '../App/App';\nimport Auth from '../Auth/Auth';\nimport LoginPage from '../Login/LoginPage';\nimport SignUpPage from '../SignUp/SignUpPage';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { Route, Link, withRouter } from 'react-router-dom';\n\nimport './Base.css';\n\nconst logout = (e, history) => {\n\te.preventDefault();\n\tAuth.deauthenticateUser();\n\tconsole.log(Auth.localStorage);\n\thistory.push('/login');\n}\n\nconst Base = withRouter(({ history }) => (\n\t<div className=\"root\">\n\t  <AppBar position=\"static\" className=\"appBar\">\n\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t<IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n\t\t\t\t\t<MenuIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n\t\t\t\t\tTrendy App\n\t\t\t\t</Typography>\n\t\t\t\t{Auth.isUserAuthenticated() ?\n\t\t\t\t\t(<div>\n\t\t\t\t\t\t{Auth.getEmail()}\n\t\t\t\t\t\t<Button color=\"inherit\" href=\"/logout\" onClick={e => logout(e, history)}>Log out</Button>\n\t\t\t\t\t</div>)\n\t\t\t\t\t:\n\t\t\t\t\t(<div>\n            <Button color=\"inherit\" component={ Link } to=\"/login\">Log in</Button>\n            <Button color=\"inherit\" component={ Link } to=\"/signup\">Sign up</Button>\n\t\t\t\t\t</div>)\n\t\t\t\t}\n\t\t\t</Toolbar>\n\t\t</AppBar>\n    <br/>\n  \t<Route exact path=\"/\" render={() => (Auth.isUserAuthenticated() ?\n  \t\t<App /> : <LoginPage />)} />\n  \t<Route exact path=\"/login\" component={LoginPage} />\n  \t<Route exact path=\"/signup\" component={SignUpPage} />\n\t</div>\n));\n\nexport default Base;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Base from './Base/Base';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><Base /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}